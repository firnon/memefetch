#!/usr/bin/env bash

# memeFetch - a CLI Bash script to show system/theme info in screenshots
# copyright Â© 2015 Rob1NN
# License: AGPLv3

author="Rob1NN <robin@rob1nn.pw>"
ver="1.1"

verbose="false"

#colors
c0="\033[0m"
c1="\033[0m\033[36m"
c2="\033[0m\033[34m"
c3="\033[38;5;202m"
cB="\033[1m"
cU="\033[4m"

help() {
	if [[ ${#ver} > 1 ]]; then
		version="V. $ver"
	else
		version="Ver $ver "
	fi

	echo -e "################\n#### $version ####\n################\n"
	echo "# memefetch help"
	echo "## -h / --help: return this help page"
	echo "## -v / --version: show version"
	echo "## -V / --Verbose: enable verbosity (disables ascii art too)"
}

verbose() {
	if [[ "$verbose" == "true" ]]; then
		echo "$1"
	fi
}

#arg/optparse
case $1 in
	--ascii|-a) art="$2";; 
	--help|-h) help; exit 0;;
	--version|-v) echo "Version $ver"; exit 0;;
	--Verbose|-V) verbose="true";;
esac

#ascii
if [[ "$art" == "" ]]; then
	#default to archlinux ascii
	art="arch"
fi

#distro
command -v lsb_release >/dev/null 2>&1 || distro="Unknown"
if [[ "$distro" != "Unknown" ]]; then
	distro=$(lsb_release -a | sed -n -e 's/^.*ID://p')
	distro=${distro//[[:blank:]]/}
fi
verbose "Distro: $distro"

#user
user=${USER}
if [[ "$user" == "" ]]; then
	user="Unknown"
fi
verbose "User: $user"

#host
host=${HOSTNAME}
if [[ "$host" == "" ]]; then
	host="Unknown"
fi
verbose "Hostname: $host"

#kernel
kernel=$(uname -srm)
if [[ "$kernel" == "" ]]; then
	kernel="Unknown"
fi
verbose "Kernel: $kernel"

#uptime
if [[ -f /proc/uptime ]]; then
	uptime=$(</proc/uptime)
	uptime=${uptime//.*}
	secs=$((${uptime}%60))
	mins=$((${uptime}/60%60))
	hours=$((${uptime}/3600%24))
	days=$((${uptime}/86400))
	uptime="${mins}m"
	if [ "${hours}" -ne "0" ]; then
		uptime="${hours}h ${uptime}"
	fi
	if [ "${days}" -ne "0" ]; then
		uptime="${days}d ${uptime}"
	fi
else
	uptime="Unknown"
fi
verbose "Uptime: $uptime"

#memory
if [[ -f /proc/meminfo ]]; then
	mem_total=$[$(awk '/MemTotal/ {print $2}' /proc/meminfo)/1024]
	mem_avail=$[$(awk '/MemAvailable/ {print $2}' /proc/meminfo)/1024]
	mem_used=$[mem_total-mem_avail]
else
	mem_total="Unknown"
	mem_avail="Unknown"
	mem_used="Unknown"
fi
verbose "Total Memory: $mem_total MiB"
verbose "Available Memory: $mem_avail MiB"
verbose "Used Memory: $mem_used MiB"

#cpu usage
if [[ -f /proc/stat ]]; then
	cpu_usage=$(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage "%"}')
else
	cpu_usage="Unknown"
fi
verbose "CPU Usage: $cpu_usage"

#cpu cores
if [[ -f /proc/cpuinfo ]]; then
	cpu_cores=$(awk '/^processor/{n+=1}END{print n}' /proc/cpuinfo)
else
	cpu_cores="Unknown"
fi
verbose "CPU Cores: $cpu_cores"

#errors?
u="Unknown"
if \
	[[ "$distro" == "$u" ]] ||\
	[[ "$user" == "$u" ]] ||\
	[[ "$host" == "$u" ]] ||\
	[[ "$kernel" == "$u" ]] ||\
	[[ "$uptime" == "$u" ]] ||\
	[[ "$mem_total" == "$u" ]] ||\
	[[ "$mem_avail" == "$u" ]] ||\
	[[ "$mem_used" == "$u" ]] ||\
	[[ "$cpu_usage" == "$u" ]] ||\
	[[ "$cpu_cores" == "$u" ]]; then
	verbose "Some data could not be detected automagically. Please contact $author with information about your distro."
fi
verbose ""

#display config
o1="${cB}$user${c0}@${cB}$host"
o2="${c3}OS:${c0} $distro"
o3="${c3}Kernel:${c0} $kernel"
o4="${c3}Uptime:${c0} $uptime"
o5=""
o6="${c3}Memory:"
o7="${cB}# ${c3}Total:${c0} $mem_total MiB"
o8="${cB}# ${c3}Used:${c0} $mem_used MiB"
o9="${cB}# ${c3}Available:${c0} $mem_avail MiB"
o10=""
o11="${c3}CPU:"
o12="${cB}# ${c3}Cores:${c0} $cpu_cores"
o13="${cB}# ${c3}Usage:${c0} $cpu_usage"
o14=""
o15=""
o16=""
o17=""
o18=""

#ascii art
arch=(\
"${c1}                   -\`                    \n"\
"${c1}                  .o+\`                $o1\n"\
"${c1}                 \`ooo/                $o2\n"\
"${c1}                \`+oooo:               $o3\n"\
"${c1}               \`+oooooo:              $o4\n"\
"${c1}               -+oooooo+:             $o5\n"\
"${c1}             \`/:-:++oooo+:            $o6\n"\
"${c1}            \`/++++/+++++++:           $o7\n"\
"${c1}           \`/++++++++++++++:          $o8\n"\
"${c1}          \`/+++o"${c2}"oooooooo"${c1}"oooo/\`        $o9\n"\
"${c2}         "${c1}"./"${c2}"ooosssso++osssssso"${c1}"+\`       $o10\n"\
"${c2}        .oossssso-\`\`\`\`/ossssss+\`      $o11\n"\
"${c2}       -osssssso.      :ssssssso.     $o12\n"\
"${c2}      :osssssss/        osssso+++.    $o13\n"\
"${c2}     /ossssssss/        +ssssooo/-    $o14\n"\
"${c2}   \`/ossssso+/:-        -:/+osssso+-  $o15\n"\
"${c2}  \`+sso+:-\`                 \`.-/+oso: $o16\n"\
"${c2} \`++:.                           \`-/+/$o17\n"\
"${c2} .\`                                 \`/$o18\n"\
"${c0}")

#show information
if [[ "$verbose" == "false" ]]; then
	echo -e "${!art}"
fi